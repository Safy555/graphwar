program graphwar;
uses graph,wincrt;
const k=50;  //kolko pixelov je jeden dielik
      hracr=20; //polomer kruhu hraca
      suborc='subor.txt';
type Thrac=record
  x,y:integer;
  end;
  Tscore=record
    scorehraca:integer;
    menohraca:string[20];
  end;
var
  gd,gm:smallint;
  i,j,stavhry,esc,poc1,poc2,t,kod:integer;
  input,input_old,meno,s,s1,ops2,ops1:string;
  ch:char;
  hrac:Tscore;
  hraci: array [1..2] of Thrac;
  player:array [1..60] of Tscore;
  subor:file of Tscore;
function StringToReal(s:string):real;  //premena string->real
  var
    code:integer;
    value:real;
  begin
    Val(s,value,code);
    if code=0 then
      StringToReal:=value
    else
      StringToReal:= 0.0; // ak zlyha da 0.0
  end;

procedure tabulka();  //triedenie pola
var i,j,l:integer;
begin
 reset(subor);
 l:=0;
 for i:=1 to filesize(subor) do if length(player[i].menohraca)>0 then l:=l+1;
 for i:=1 to l do
  begin
   for j:=1 to l-i do
    begin
      if player[j].scorehraca < player[j+1].scorehraca  then
      begin
       hrac:=player[j];
       player[j]:=player[j+1];
       player[j+1]:=hrac;
      end;
    end;
  end;
 close(subor);
end;

procedure prepis_do_subor();   //prepis pola do suboru
var x:integer;
begin
  x:=1;
  rewrite(subor);
  while length(player[x].menohraca)>0 do
  begin
     //x:=x+1;
     write(subor,player[x]);
     x:=x+1;
  end;
  close(subor);
end;

procedure prepis_do_pola();   //typesuboru do pola
var i:integer;
begin
  reset(subor);
  for i:=1 to filesize(subor) do begin
    read(subor,player[i]);
  end;
  close(subor);
end;

procedure box(stred_x,stred_y,sirka,vyska,border:integer; farba_stred,farba_vlavo,farba_vpravo:word);    //box s tienmi
begin
  setfillstyle(1,farba_stred);
  bar(stred_x-(sirka div 2)+border,stred_y-(vyska div 2)+border,stred_x+(sirka div 2)-border,stred_y+(vyska div 2)-border);
  setfillstyle(1,farba_vlavo);
  bar(stred_x-(sirka div 2),stred_y-(vyska div 2),stred_x+(sirka div 2),stred_y-(vyska div 2)+border);
  bar(stred_x-(sirka div 2),stred_y-(vyska div 2),stred_x-(sirka div 2)+border,stred_y+(vyska div 2));
  setfillstyle(1,farba_vpravo);setcolor(farba_vpravo);
  bar(stred_x+(sirka div 2),stred_y+(vyska div 2),stred_x-(sirka div 2)+border,stred_y+(vyska div 2)-border);
  bar(stred_x+(sirka div 2),stred_y+(vyska div 2),stred_x+(sirka div 2)-border,stred_y-(vyska div 2)+border);
  line(stred_x-(sirka div 2),stred_y+(vyska div 2),stred_x-(sirka div 2)+border,stred_y+(vyska div 2));
  line(stred_x-(sirka div 2),stred_y+(vyska div 2),stred_x-(sirka div 2)+border,stred_y+(vyska div 2)-border);
  line(stred_x+(sirka div 2),stred_y-(vyska div 2),stred_x+(sirka div 2)-border,stred_y-(vyska div 2)+border);
  line(stred_x+(sirka div 2),stred_y-(vyska div 2),stred_x+(sirka div 2),stred_y-(vyska div 2)+border);
  floodfill(stred_x-(sirka div 2)+border-2,stred_y+(vyska div 2)-(border div 2),farba_vpravo);
  floodfill(stred_x+(sirka div 2)-(border div 2),stred_y-(vyska div 2)+border-2,farba_vpravo);

end;

procedure panacik(panacikx,panaciky:integer;strana:string);   //vypis hracov
begin
   setfillstyle(1,red);setcolor(red);
   FillEllipse(panacikx,panaciky,hracr,hracr);
   if strana='l' then begin
        setfillstyle(1,white);setcolor(white);
        FillEllipse(panacikx-(hracr div 2),panaciky-(hracr div 4),(hracr div 4),(hracr div 4));
        setfillstyle(1,black);setcolor(black);
        FillEllipse(panacikx-(hracr div 2),panaciky-(hracr div 4),(hracr div 10),(hracr div 10))
   end
   else if strana='p' then begin
        setfillstyle(1,white);setcolor(white);
        FillEllipse(panacikx+(hracr div 2),panaciky-(hracr div 4),(hracr div 4),(hracr div 4));
        setfillstyle(1,black);setcolor(black);
        FillEllipse(panacikx+(hracr div 2),panaciky-(hracr div 4),(hracr div 10),(hracr div 10))
   end;
end;

procedure generovanie(level:integer);   //generovanie prekazok,hracov
var
  randx,randy,randr,rand,pocc,rx,ry:integer;
begin
  case level of
  1:rand:=0;
  2:rand:=10;
  3:rand:=20;
  4:rand:=30;
  end;

  hraci[1].x:=100+hracr+random(((getmaxx-200)div 2)-(2*hracr));
  hraci[1].y:=110+hracr+random(getmaxy-300-(3*hracr));
  panacik(hraci[1].x,hraci[1].y,'p');                    //generovanie panacika vlavo
  hraci[2].x:=(getmaxx div 2)+hracr+random(((getmaxx-200) div 2)-(2*hracr));
  hraci[2].y:=110+hracr+random(getmaxy-300-(3*hracr));
  panacik(hraci[2].x,hraci[2].y,'l');                    //generovanie panacika vpravo

  setfillstyle(1,green);setcolor(green);
  for i:=1 to rand do begin
      repeat
         randr:=random(80)+20;
         randx:=randr+100+random(getmaxx-200-(2*randr));
         randy:=randr+100+random(getmaxy-300-(2*randr));
         pocc:=0;
         for j:=1 to 2 do begin
             if hraci[j].x>randx then rx:=hraci[j].x-randx
             else if hraci[j].x<randx then rx:=randx-hraci[j].x
             else rx:=1;

             if hraci[j].y>randy then ry:=hraci[j].y-randy
             else if hraci[j].y<randy then ry:=randy-hraci[j].y
             else ry:=1;

             if round(sqrt(rx*rx+ry*ry))<randr+hracr+21 then pocc:=pocc+1;
         end;
      until pocc=0;
      FillEllipse(randx,randy,randr,randr);
  end;




end;

function GetPrecedence(ch: Char): Integer;   //prednost operatorov
begin
  if (ch='+') or (ch='-') then GetPrecedence:=1
  else if (ch='*') or (ch='/') then GetPrecedence:=2;
end;

function Infixpostfix1(infix:string):string;   //infix->postfix
var output,stack1,s:string;
  i,c:integer;
  x:real;
begin
  output:='';
  stack1:='';
  poc1:=0;
  c:=1;
  x:=c/k;
  str(x:0:2,s);
  for i:=1 to length(infix) do begin
    if lowercase(infix[i])='x' then begin
       delete(infix,i,1);
       insert(s,infix,i);
    end;
  end;
  for i:=1 to length(infix) do begin
     if ((infix[i]>='0') and (infix[i]<='9')) or (infix[i]='.') or (lowercase(infix[i])='x')  then begin
       if  ((infix[i+1]>='0') and (infix[i+1]<='9')) or (infix[i+1]='.') then begin
         output:=output+infix[i];
       end
       else  begin
         output:=output+infix[i]+' ';
         poc1:=poc1+1;
       end;
     end
     else if infix[i]='(' then stack1:=stack1+'('
     else if (infix[i]='+') or (infix[i]='-') or (infix[i]='*') or (infix[i]='/') then
     begin
       if  (length(stack1)=0) or (stack1[length(stack1)]='(') or (GetPrecedence(stack1[Length(stack1)]) < GetPrecedence(infix[i])) then stack1:=stack1+infix[i]
       else
       begin
          repeat
             output:=output+stack1[length(stack1)]+' ';
             delete(stack1,length(stack1),1);
          until (length(stack1)=0) or (stack1[length(stack1)]='(') or (GetPrecedence(stack1[Length(stack1)]) < GetPrecedence(infix[i]));
          stack1:=stack1+infix[i];
       end;
     end
     else if infix[i] = ')' then
     begin
        while (Length(stack1) > 0) and (stack1[Length(stack1)] <> '(') do
        begin
             output := output + stack1[Length(stack1)]+' ';
             Delete(stack1, Length(stack1), 1);
             end;
        Delete(stack1, Length(stack1), 1); // Remove the '(' from the stack
     end;
  end;

  while Length(stack1) > 0 do
  begin
    output := output + stack1[Length(stack1)]+' ';
    Delete(stack1,Length(stack1),1);
  end;


  Infixpostfix1:=output;
  s:=output;
  poc2:=0;

  repeat
     poc2:=poc2+1;
     delete(s,pos(' ',s),1);
  until pos(' ',s)=0;

end;

function Evaluate(infix:string; c:integer):integer;   //peklo
var
  s2,op1,op2,postfix,output,stack1,xs,s:string;
  pom:char;
  i,a,e,j:integer;
  o1,o2,res,x:real;
  operands:array ['a'..'z'] of string;
  operand:array ['a'..'z'] of real;
  stack:array [0..30] of real;
begin
  output:='';
  stack1:='';
  poc1:=0;
  x:=c/k;
  str(x:0:2,xs);  //overene napr. '-17.45'

  a:=97;
  for i:=1 to length(infix) do begin
     if ((infix[i]>='0') and (infix[i]<='9')) or (infix[i]='.') or (lowercase(infix[i])='x')  then begin
       if  ((infix[i+1]>='0') and (infix[i+1]<='9')) or (infix[i+1]='.') then begin
         operands[chr(a)]:=operands[chr(a)]+infix[i];
       end
       else  begin
         if infix[i]='x' then operands[chr(a)]:=xs
         else operands[chr(a)]:=operands[chr(a)]+infix[i];
         operand[chr(a)]:=StringToReal(operands[chr(a)]);
         output:=output+chr(a)+' ';
         poc1:=poc1+1;
         a:=a+1;
       end;
     end
     else if infix[i]='(' then stack1:=stack1+'('
     else if (infix[i]='+') or (infix[i]='-') or (infix[i]='*') or (infix[i]='/') then
     begin
       if  (length(stack1)=0) or (stack1[length(stack1)]='(') or (GetPrecedence(stack1[Length(stack1)]) < GetPrecedence(infix[i])) then stack1:=stack1+infix[i]
       else
       begin
          repeat
             output:=output+stack1[length(stack1)]+' ';
             delete(stack1,length(stack1),1);
          until (length(stack1)=0) or (stack1[length(stack1)]='(') or (GetPrecedence(stack1[Length(stack1)]) < GetPrecedence(infix[i]));
          stack1:=stack1+infix[i];
       end;
     end
     else if infix[i] = ')' then
     begin
        while (Length(stack1) > 0) and (stack1[Length(stack1)] <> '(') do
        begin
             output := output + stack1[Length(stack1)]+' ';
             Delete(stack1, Length(stack1), 1);
             end;
        Delete(stack1, Length(stack1), 1); // da prec '('
     end;
  end;

  while Length(stack1) > 0 do
  begin
    output := output + stack1[Length(stack1)]+' ';
    Delete(stack1,Length(stack1),1);
  end;


  postfix:=output;
  s:=output;
  poc2:=0;

  repeat
     poc2:=poc2+1;
     delete(s,pos(' ',s),1);
  until pos(' ',s)=0;

  //funguje potialto
  e:=0;
  for i:=0 to 30 do begin
   stack[i]:=0;
  end;

  if pos('x',infix)=0  then Evaluate:=hraci[1].y
  else begin
       for i:=1 to poc2 do begin
       pom:=postfix[1];
       delete(postfix,1,2);
       if (pom='+') or (pom='-') or (pom='*') or (pom='/') then begin
         a:=0;
         if e-2=-1 then o1:=0
         else o1:=stack[e-2];stack[e-2]:=0;
         o2:=stack[e-1];stack[e-1]:=0;
         if e-2=-1 then e:=e-1
         else e:=e-2;

         if pom='+' then res:=o1+o2
         else if pom='-' then res:=o1-o2
         else if pom='*' then res:=o1*o2
         else if pom='/' then res:=o1 / o2;

         stack[e]:=res;
         e:=e+1;
       end
       else begin
         stack[e]:=operand[pom];
         e:=e+1;
       end;
    end;
    evaluate:=round(-stack[0]*k+((getmaxy-100) div 2));

  end;
end;

function fx(input1:string; c:integer):integer;   //vypocet funkcnej hodnoty
var
  i,poc,poc1,posz:integer;
  x,res,cislo:real;
  s1,znamienko:string;
begin
  x:=c/k;
  if (pos('x',lowercase(input1))<1)  then fx:=hraci[1].y  //konstanty napr. y=2
  else begin
       res:=0;
       poc:=0;
       for i:=1 to length(input1) do begin
          if (input1[i]='+') or (input1[i]='-') or (input1[i]='*') or (input1[i]='/') then poc:=poc+1;
       end;
       for i:=1 to poc do begin
          posz:=0;
          poc1:=0;
          znamienko:=input1[1]; delete(input1,1,1);
          if i<>poc then begin
               repeat
                  poc1:=poc1+1;
                  if (input1[poc1]='+') or (input1[poc1]='-') or (input1[poc1]='*') or (input1[poc1]='/') then posz:=poc1;
               until posz<>0;
               s1:=copy(input1,1,posz-1); delete(input1,1,posz-1);
          end
          else  s1:=input1;
          if znamienko='+' then begin
               if lowercase(s1)<>'x' then begin
                 cislo:=StringToReal(s1);
                 res:=res+cislo;
               end
               else res:=res+x;
          end
          else if znamienko='-' then begin
               if lowercase(s1)<>'x' then begin
                 cislo:=StringToReal(s1);
                 res:=res-cislo;
               end
               else res:=res-x;
          end
          else if znamienko='*' then begin
               if lowercase(s1)<>'x' then begin
                 cislo:=StringToReal(s1);
                 res:=res*cislo;
               end
               else res:=res*x;
          end
          else if znamienko='/' then begin
               if lowercase(s1)<>'x' then begin
                 cislo:=StringToReal(s1);
                 res:=res/cislo;
               end
               else res:=res/x;
          end;

       end;
       fx:=round(-res*k+((getmaxy-100) div 2));
  end;
end;

procedure vykreslenie(hracx,hracy:integer; vykreslenie_farba:word; inpu:string);   //vykreslenie funckie
var
  j,p,poc:integer;
begin
   poc:=0;
   if stavhry=2 then stavhry:=0;
   p:=hraci[1].y-evaluate(inpu,hracx-100-((getmaxx-200) div 2));
   j:=hracx-100-((getmaxx-200) div 2)-1;
   repeat
      poc:=poc+1;
      j:=j+1;
      if (getpixel(j+(getmaxx div 2),evaluate(inpu,j)+p)=green) then begin
           if  vykreslenie_farba<>black then begin
                setcolor(black);setfillstyle(1,black);
                FillEllipse(j+(getmaxx div 2),evaluate(inpu,j)+p,20,20);
                stavhry:=2;
           end
           else  if vykreslenie_farba=black then stavhry:=2;

      end
      else if (getpixel(j+(getmaxx div 2),evaluate(inpu,j)+p)=red) and ((hracx+poc)-(hracx)>(hracr+5)) then begin
           stavhry:=1;
           setcolor(darkgray);settextstyle(0,0,10);
           outtextxy((getmaxx div 2)-337,55,'Vyhral si');
           setcolor(blue);
           outtextxy((getmaxx div 2)-332,50,'Vyhral si');
           repeat until keypressed;
      end
      else begin
         putpixel(j+(getmaxx div 2),evaluate(inpu,j)+p,vykreslenie_farba);
         //delay(1);
      end;
   until (j=((getmaxx-200) div 2)) or ((evaluate(inpu,j)+p>getmaxy-200)) or ((evaluate(inpu,j)+p<100)) or (stavhry<>0);


end;

procedure pole();    //pozadie
var
  cislox,cisloy:integer;
  cx,cy:string;
begin
  cleardevice();
  rectangle(100,100,getmaxx-100,getmaxy-200);
  moveto((getmaxx div 2)-70,(getmaxy-100) div 2);setcolor(white); settextstyle(0,0,1);
  outtext('loading...');

  //pozadie
  SetFillStyle(1,lightgray);
  bar(0,0,getmaxx,100);
  bar(0,0,100,getmaxy);
  bar(getmaxx-100,0,getmaxx,getmaxy);
  bar(0,getmaxy-200,getmaxx,getmaxy);

  // pole na predpis
  setfillstyle(1,black);
  bar(200,getmaxy-120,getmaxx-200,getmaxy-80);
  setfillstyle(1,darkgray);
  bar(180,getmaxy-140,getmaxx-180,getmaxy-120);
  bar(180,getmaxy-140,200,getmaxy-60);
  setfillstyle(1,white);
  bar(getmaxx-180,getmaxy-60,getmaxx-200,getmaxy-120);
  bar(getmaxx-180,getmaxy-60,200,getmaxy-80);
  line(180,getmaxy-60,200,getmaxy-80);
  line(180,getmaxy-60,200,getmaxy-60);
  line(getmaxx-200,getmaxy-120,getmaxx-180,getmaxy-140);
  line(getmaxx-180,getmaxy-140,getmaxx-180,getmaxy-120);
  floodfill(190,getmaxy-65,white);
  floodfill(getmaxx-190,getmaxy-125,white);



  SetTextStyle (0,0,2);setcolor(green);
  outtextxy(220,getmaxy-110,'y=');
  SetTextStyle (0,0,1);


  SetFillStyle(1,white);
  //vlavo vonku
  bar(0,0,20,getmaxy);
  //hore vonku
  bar(0,0,getmaxx,20);
  //dole vnutri
  bar(80,getmaxy-200,getmaxx-80,getmaxy-180);
  //vpravo vnutri
  bar(getmaxx-100,80,getmaxx-80,getmaxy-180);


  setfillstyle(1,darkgray);setcolor(darkgray);
  //vpravo vonku
  bar(getmaxx-20,20,getmaxx,getmaxy);
  //dole vonku
  bar(20,getmaxy-20,getmaxx,getmaxy);
  //hore vnutri
  bar(80,80,getmaxx-100,100);
  //vlavo vnutri
  bar(80,80,100,getmaxy-200);
  //lavy dolny roh vonku
  line(0,getmaxy,20,getmaxy-20);
  line(0,getmaxy,20,getmaxy);
  floodfill(10,getmaxy-5,darkgray);
  //lavy dolny roh vnutri
  line(80,getmaxy-180,80,getmaxy-200);
  line(80,getmaxy-180,100,getmaxy-200);
  floodfill(90,getmaxy-190,darkgray);
   // pravy horny roh vonku
  line(getmaxx,0,getmaxx-20,20);
  line(getmaxx,0,getmaxx,20);
  floodfill(getmaxx-5,10,darkgray);
  //pravy horny roh vnutri
  line(getmaxx-80,80,getmaxx-100,80);
  line(getmaxx-80,80,getmaxx-100,100);
  floodfill(getmaxx-95,85,darkgray);


  //vymazanie "loading..."
  setfillstyle(1,black);
  bar((getmaxx div 2)-70,(getmaxy-100) div 2,(getmaxx div 2)+30,((getmaxy-100) div 2) +20);


  //osi
  setcolor(yellow);
  line(getmaxx div 2,101,getmaxx div 2,getmaxy-201);
  line(101,(getmaxy-101) div 2,getmaxx-101,(getmaxy-101) div 2);


  setcolor(green);
  //hodnoty osi y
  cisloy:=round(((getmaxy-300) div 2)/k);
  str(cisloy,cy);
  moveto((getmaxx div 2)-7,90); outtext(cy);
  cy:='-'+cy;
  moveto((getmaxx div 2)-14,getmaxy-195); outtext(cy);


  //hodnoty osi x
  cislox:=round(((getmaxx-200) div 2)/k);
  str(cislox,cx);
  moveto(getmaxx-98,((getmaxy-100)div 2)-4); outtext(cx);
  cx:='-'+cx;
  moveto(78,((getmaxy-100)div 2)-4); outtext(cx);
end;

procedure predpis();   //input predpisu
var
  o:integer;
begin
  input:='';
  setfillstyle(1,black);
  bar(250,getmaxy-110,getmaxx-220,getmaxy-90);
  moveto(250,getmaxy-110);
  SetTextStyle (0,0,2);setcolor(green);
  repeat
      if keypressed then begin
        ch:=readkey;
        if (((ord(ch)>=40)and(ord(ch)<=57)) or (ord(ch)=88) or (ord(ch)=120)) and ((ch<>#13)or(ch<>#8)or(ch<>#27)) then begin
           outtext(ch);
           input:=input+ch;
        end;
        if (ch=#8) then begin
          input:='';
          setfillstyle(1,black);
          bar(250,getmaxy-110,getmaxx-220,getmaxy-90);
          moveto(250,getmaxy-110);
        end;
        if (ch=#13) and (length(input)>0)then begin
          if ((input[1]='*') or (input[1]='/') or (input[1]='.') or (input[1]=',')) then begin
             input:='';
             setfillstyle(1,black);
             bar(250,getmaxy-110,getmaxx-220,getmaxy-90);
             moveto(250,getmaxy-110);
          end;
        end;
        if (ch=#27) then esc:=1;
      end;
  until ((ch=#13) and (length(input)>0)) or (esc=1);
  if (esc=0) then begin
    //if (input[1]<>'+') and (input[1]<>'-') then insert('+',input,1);
    if pos(',',input)<>0 then begin
      repeat
          input[pos(',',input)]:='.';
      until pos(',',input)=0;
    end;
    if pos(' ',input)<>0 then begin
      repeat
          delete(input,pos(' ',input),1);
      until pos(' ',input)=0;
    end;
  end;
  o:=length(input);
  for i:=1 to o do begin
     if (input[i]='-') and (lowercase(input[i+1])='x') then insert('1',input,i);
  end;

  //SetTextStyle (0,0,1);setcolor(white);moveto(100,20);outtext(input);
end;

function sipky(sipky_x,sipky_y,sipky_sirka,sipky_vyska,skok,nn:integer; farba_sipky:word):integer;   //sipky v menu
var x,p:integer;
begin
  x:=1;
  p:=0;
  sipky_y:=sipky_y+(((getmaxy-250) div nn) div 2);
  setfillstyle(1,darkgray);
  bar(sipky_x-(sipky_sirka div 2)-3,sipky_y+3,sipky_x+(sipky_sirka div 2)-3,sipky_y+sipky_vyska+3);
  setfillstyle(1,farba_sipky);
  bar(sipky_x-(sipky_sirka div 2),sipky_y,sipky_x+(sipky_sirka div 2),sipky_y+sipky_vyska);
  repeat
     keypressed();
     ch:=readkey;
     if (lowercase(ch)='s') and (x<nn) then begin    //sipka dole
       setfillstyle(1,lightgray);
       bar(sipky_x-(sipky_sirka div 2)-8,(sipky_y+skok*p)-1,sipky_x+(sipky_sirka div 2)+1,(sipky_y+skok*p)+sipky_vyska+4);
       p:=p+1;
       x:=x+1;
       setfillstyle(1,darkgray);
       bar(sipky_x-(sipky_sirka div 2)-3,(sipky_y+skok*p)+3,sipky_x+(sipky_sirka div 2)-3,(sipky_y+skok*p)+sipky_vyska+3);
       setfillstyle(1,farba_sipky);
       bar(sipky_x-(sipky_sirka div 2),(sipky_y+skok*p),sipky_x+(sipky_sirka div 2),(sipky_y+skok*p)+sipky_vyska);
     end
     else if (lowercase(ch)='w') and (x>1) then begin     //sipka hore
       setfillstyle(1,lightgray);
       bar(sipky_x-(sipky_sirka div 2)-8,(sipky_y+skok*p)-1,sipky_x+(sipky_sirka div 2)+1,(sipky_y+skok*p)+sipky_vyska+4);
       p:=p-1;
       x:=x-1;
       setfillstyle(1,darkgray);
       bar(sipky_x-(sipky_sirka div 2)-3,(sipky_y+skok*p)+3,sipky_x+(sipky_sirka div 2)-3,(sipky_y+skok*p)+sipky_vyska+3);
       setfillstyle(1,farba_sipky);
       bar(sipky_x-(sipky_sirka div 2),(sipky_y+skok*p),sipky_x+(sipky_sirka div 2),(sipky_y+skok*p)+sipky_vyska);
     end;
  until ch=#13;
  sipky:=x;
end;

procedure menu(moznosti:integer);   //menu rozhranie
var
  space_cele,space_moznost,vys,sir,a:integer;
begin
  box(getmaxx div 2,getmaxy div 2,getmaxx,getmaxy,20,lightgray,white,darkgray);

  //nadpis
  settextstyle(0,0,10);
  setcolor(darkgray);
  outtextxy((getmaxx div 2)-305,55,'Graphwar');
  setcolor(green);
  outtextxy((getmaxx div 2)-300,50,'Graphwar');
  settextstyle(0,0,1);setcolor(white);


  sir:=600;
  space_cele:=getmaxy-250;
  space_moznost:=space_cele div moznosti;
  vys:=space_moznost;
  box(getmaxx div 2,270+((space_cele-200) div 2),sir+40,getmaxy-210,20,lightgray,darkgray,white);
  a:=0;
  for i:=1 to moznosti do begin
     box(getmaxx div 2,170+(vys div 2)+a,sir,vys,20,lightgray,white,darkgray);
     a:=a+vys;
  end;

end;

procedure login(dlzka:integer);   //login hraca
var poc:integer;
    dlzkas:string;
begin
  str(dlzka,dlzkas);
  box(getmaxx div 2,getmaxy div 2,getmaxx,getmaxy,20,lightgray,white,darkgray);

  //nadpis
  settextstyle(0,0,10);
  setcolor(darkgray);
  outtextxy((getmaxx div 2)-305,55,'Graphwar');
  setcolor(green);
  outtextxy((getmaxx div 2)-300,50,'Graphwar');
  settextstyle(0,0,1);setcolor(white);

  box(getmaxx div 2,getmaxy div 2,getmaxx div 2,getmaxy div 2,20,lightgray,darkgray,white);

  settextstyle(0,0,5);
  setcolor(darkgray);
  outtextxy((getmaxx div 2)-203,(getmaxy div 2)-(getmaxy div 4) +28,'Vase meno');
  setcolor(green);
  outtextxy((getmaxx div 2)-200,(getmaxy div 2)-(getmaxy div 4) +25,'Vase meno');
  settextstyle(0,0,1);
  setcolor(darkgray);
  outtextxy((getmaxx div 2)-81,(getmaxy div 2)+(getmaxy div 4) -34,'max '+dlzkas+' znakov');
  setcolor(green);
  outtextxy((getmaxx div 2)-80,(getmaxy div 2)+(getmaxy div 4) -35,'max '+dlzkas+' znakov');


  settextstyle(0,0,3);
  setcolor(black);
  moveto((getmaxx div 2)-(getmaxx div 6),getmaxy div 2);
  poc:=0;
  meno:='';
  repeat
     if keypressed then begin
       ch:=readkey;
       if (((ord(ch)>=48)and(ord(ch)<=57)) or ((ord(ch)>=65)and(ord(ch)<=90)) or ((ord(ch)>=97)and(ord(ch)<=122))) and (length(meno)+1<=dlzka) then begin
         outtext(ch);
         meno:=meno+ch;
       end;
       if ch=#8 then begin
         setfillstyle(1,lightgray);
         bar((getmaxx div 2)-(getmaxx div 6)-10,(getmaxy div 2)-10,(getmaxx div 2)+(getmaxx div 6),(getmaxy div 2)+30);
         meno:='';
         moveto((getmaxx div 2)-(getmaxx div 6),getmaxy div 2);
       end;
     end;
  until ((ch=#13) and (length(meno)>0)); //kontrola dlzky mena
  //outtextxy(100,100,meno);



  reset(subor);
  for i:=1 to filesize(subor) do begin
         read(subor,hrac);
         if hrac.menohraca=meno then begin
           poc:=1;
         end;
      end;

  hrac.menohraca:=meno;
  if poc=0 then begin
    seek(subor,filesize(subor));
    hrac.scorehraca:=0;
    write(subor,hrac);
  end;
  close(subor);
end;

procedure rebricek();   //rebricek
var gx,gy:integer;
    ii,score:string;
begin
  reset(subor);
  box(getmaxx div 2,getmaxy div 2,getmaxx,getmaxy,20,lightgray,white,darkgray);

  //nadpis
  settextstyle(0,0,10);
  setcolor(darkgray);
  outtextxy((getmaxx div 2)-305,55,'Graphwar');
  setcolor(green);
  outtextxy((getmaxx div 2)-300,50,'Graphwar');
  gy:=0;
  gx:=0;
  box(getmaxx div 2,270+((getmaxy-450) div 2),getmaxx-200,getmaxy-210,20,lightgray,darkgray,white);
  settextstyle(0,0,2);setcolor(black);
  for i:=1 to filesize(subor) do begin
     str(i,ii);
     str(player[i].scorehraca,score);
     outtextxy(140+(gx*400),200+(gy*20),ii);
     outtextxy(200+(gx*400),200+(gy*20),player[i].menohraca);
     outtextxy(600+(gx*400),200+(gy*20),score);
     if 200+((gy+1)*20)>getmaxy-120 then begin
       gy:=0;
       gx:=gx+1;
     end
     else gy:=gy+1;
  end;
  close(subor);
end;

procedure najdi(body:integer);   //najde komu ma pripisat body po vyhre
var i:integer;
begin
  reset(subor);
  i:=0;
  repeat
     i:=i+1;
     read(subor,hrac);
  until hrac.menohraca=meno;
  player[i].scorehraca:=player[i].scorehraca+body;
  close(subor);
  //prepis_do_subor();
  //prepis_do_pola();
end;

procedure hra();    //cela hra
var
  vy,koniec,t,m,n:integer;
  napoveda1:string;
begin
  prepis_do_pola();
  koniec:=0;
  repeat
    menu(4);
    vy:=((getmaxy-250) div 4);
    settextstyle(0,0,5);setcolor(darkgray);
    outtextxy((getmaxx div 2)-78,170+(vy div 2)-26,'Hrat');
    outtextxy((getmaxx div 2)-163,170+(vy div 2)+vy-26,'Rebricek');
    outtextxy((getmaxx div 2)-163,170+(vy div 2)+(2*vy)-26,'Napoveda');
    outtextxy((getmaxx div 2)-118,170+(vy div 2)+(3*vy)-26,'Koniec');
    setcolor(green);
    outtextxy((getmaxx div 2)-75,(170+(vy div 2))-29,'Hrat');
    outtextxy((getmaxx div 2)-160,(170+(vy div 2)+vy)-29,'Rebricek');
    outtextxy((getmaxx div 2)-160,(170+(vy div 2)+(2*vy))-29,'Napoveda');
    outtextxy((getmaxx div 2)-115,(170+(vy div 2)+(3*vy))-29,'Koniec');
    case sipky(getmaxx div 2,182,100,7,((getmaxy-250) div 4),4,green) of
    1:begin           //hra
           menu(5);
           esc:=0;
           stavhry:=0;
           vy:=((getmaxy-250) div 5);
           settextstyle(0,0,5);setcolor(darkgray);
           outtextxy((getmaxx div 2)-143,170+(vy div 2)-26,'Level 1');
           outtextxy((getmaxx div 2)-143,170+(vy div 2)+vy-26,'Level 2');
           outtextxy((getmaxx div 2)-143,170+(vy div 2)+(2*vy)-26,'Level 3');
           outtextxy((getmaxx div 2)-143,170+(vy div 2)+(3*vy)-26,'Level 4');
           outtextxy((getmaxx div 2)-83,170+(vy div 2)+(4*vy)-26,'Spat');
           setcolor(green);
           outtextxy((getmaxx div 2)-140,(170+(vy div 2))-29,'Level 1');
           outtextxy((getmaxx div 2)-140,(170+(vy div 2)+vy)-29,'Level 2');
           outtextxy((getmaxx div 2)-140,(170+(vy div 2)+(2*vy))-29,'Level 3');
           outtextxy((getmaxx div 2)-140,(170+(vy div 2)+(3*vy))-29,'Level 4');
           outtextxy((getmaxx div 2)-80,(170+(vy div 2)+(4*vy))-29,'Spat');
           case sipky(getmaxx div 2,183,100,7,((getmaxy-250) div 5),5,green) of
           1:begin        //level 1
                  pole();t:=0;
                  generovanie(1);
                  repeat
                    t:=t+1;
                    if t<>1 then begin
                       predpis();
                       if esc<>1 then begin
                          vykreslenie(hraci[1].x,hraci[1].y,black,input_old);
                          panacik(hraci[1].x,hraci[1].y,'p');
                          vykreslenie(hraci[1].x,hraci[1].y,magenta,input);
                          input_old:=input;
                       end;
                    end
                    else if t=1 then begin
                       predpis();
                       if esc<>1 then begin
                          vykreslenie(hraci[1].x,hraci[1].y,magenta,input);
                          input_old:=input;
                       end;
                    end;
                  until (stavhry=1) or (esc=1);
                  if stavhry=1 then begin
                      najdi(100);
                      tabulka();
                  end;
             end;
           2:begin      //level 2
                  pole();t:=0;
                  generovanie(2);
                  repeat
                    t:=t+1;
                    if t<>1 then begin
                       predpis();
                       if esc<>1 then begin
                          vykreslenie(hraci[1].x,hraci[1].y,black,input_old);
                          panacik(hraci[1].x,hraci[1].y,'p');
                          vykreslenie(hraci[1].x,hraci[1].y,magenta,input);
                          input_old:=input;
                       end;
                    end
                    else if t=1 then begin
                       predpis();
                       if esc<>1 then begin
                          vykreslenie(hraci[1].x,hraci[1].y,magenta,input);
                          input_old:=input;
                       end;
                    end;
                  until (stavhry=1) or (esc=1);
                  if stavhry=1 then begin
                      najdi(200);
                      tabulka();
                  end;
             end;
           3:begin        //level 3
                  pole();t:=0;
                  generovanie(3);
                  repeat
                    t:=t+1;
                    if t<>1 then begin
                       predpis();
                       if esc<>1 then begin
                          vykreslenie(hraci[1].x,hraci[1].y,black,input_old);
                          panacik(hraci[1].x,hraci[1].y,'p');
                          vykreslenie(hraci[1].x,hraci[1].y,magenta,input);
                          input_old:=input;
                       end;
                    end
                    else if t=1 then begin
                       predpis();
                       if esc<>1 then begin
                          vykreslenie(hraci[1].x,hraci[1].y,magenta,input);
                          input_old:=input;
                       end;
                    end;
                  until (stavhry=1) or (esc=1);
                  if stavhry=1 then begin
                      najdi(300);
                      tabulka();
                  end;
             end;
           4:begin         //level 4
                  pole();t:=0;
                  generovanie(4);
                  repeat
                    t:=t+1;
                    if t<>1 then begin
                       predpis();
                       if esc<>1 then begin
                          vykreslenie(hraci[1].x,hraci[1].y,black,input_old);
                          panacik(hraci[1].x,hraci[1].y,'p');
                          vykreslenie(hraci[1].x,hraci[1].y,magenta,input);
                          input_old:=input;
                       end;
                    end
                    else if t=1 then begin
                       predpis();
                       if esc<>1 then begin
                          vykreslenie(hraci[1].x,hraci[1].y,magenta,input);
                          input_old:=input;
                       end;
                    end;
                  until (stavhry=1) or (esc=1);
                  if stavhry=1 then begin
                      najdi(400);
                      tabulka();
                  end;
             end;
           5:; //spat
           end;

      end;
    2:begin           //rebricek
           rebricek();
           repeat
             if keypressed then ch:=readkey;
           until ch=#27;
      end;
    3:begin            //napoveda
           box(getmaxx div 2,getmaxy div 2,getmaxx,getmaxy,20,lightgray,white,darkgray);

           //nadpis
           settextstyle(0,0,10);
           setcolor(darkgray);
           outtextxy((getmaxx div 2)-305,55,'Graphwar');
           setcolor(green);
           outtextxy((getmaxx div 2)-300,50,'Graphwar');
           box(getmaxx div 2,270+((getmaxy-450) div 2),getmaxx-200,getmaxy-210,20,lightgray,darkgray,white);

           m:=0;
           n:=0;
           settextstyle(0,0,2);setcolor(black);
           napoveda1:='Graphwar je delostrelecka hra, v ktorej musite zasiahnut svojich nepriatelov pomocou matematickych funkcii. Trajektoria vasej strely je urcena funkciou, ktoru ste napisali, a vasim cielom je vyhnut sa prekazkam a zasiahnut svojich nepriatelov. Hra sa odohrava v kartezianskej rovine. Funkcia ktoru napisete je vas vystrel, takze trajektoria vystrelu bude rovnaka ako trajektoria grafu funkcie. Je tu vsak problem. Funkciu musi zastrelit vas vojak, ale nie je zarucene, ze miesto, kde vas vojak stoji, patri do funkcie. Aby sa to vyriesilo, funkcia musi byt prelozena, kym pozicia vojaka nie je sucastou funkcie, to sa robi pridanim konstanty k funkcii. To znamena, ze ak je napisana funkcia y = f(x), skutocny graf bude v skutocnosti y = f(x)+c. Preklad funkcie ma niektore matuce dosledky. Po prve, akakolvek konstanta pridana k vasej funkcii je pre vysledok irelevantna. Napriklad funkcie y = 2*x + 3, y = 2*x - 8 a y = 2*x poskytuju presne rovnaky graf v hre. Dalsi matuci fakt suvisi s tym, ze limity osi x v hre su okolo -25 a +25(presne hodnoty su napisane na bokoch hracieho pola) a limity osi y su -15 a 15. To znamena, ze funkcie mozu byt velmi velke. Napriklad funkcia y = x^2 ma hodnotu 100, ked sa x rovna 10. To znamena, ze tato funkcia velmi rychlo narazi na strop hry. Ak je vas vojak umiestneny na pozicii, kde x je -15, tato funkcia bude velmi strma, s najvacsou pravdepodobnostou sa bude javit ako priamka nahor alebo nadol. Pamatajte, ze k tejto funkcii bude potrebne pridat obrovsku konstantu, takze vysledkom je nieco uplne ine, ako by ste mohli ocakavat. Tento problem sa da vyriesit vhodnym skalovanim funkcie, funkcia y = (x^2)/50 vytvori pekne vyzerajucu parabolu. Dalsia vec, ktora vas moze zmiast je, ze vasi vojaci budu vzdy stat na zapornych hodnotach x. Vas tim sa nachadza nalavo od osi y, takze sa to ocakava a znamena to, ze funkcie ako y = 1/x vas nebudu mat radi a na kladnu stranu hracieho pola sa nikdy nedostane. Povolene operatory su "+" "-" "*" "/".';
           for i:=1 to length(napoveda1) do begin
              if 130+n>getmaxx-150 then begin
                 n:=0;
                 m:=m+18;
              end;
              outtextxy(130+n,220+m,napoveda1[i]);
              n:=n+15;



           end;
           repeat
             if keypressed then ch:=readkey;
           until ch=#27;
      end;
    4:begin          //koniec
           menu(2);
           {for i:=1 to 60 do begin
                  writeln(i,'.  ','"',player[i].menohraca,'"  ',player[i].scorehraca);
           end;}



           vy:=((getmaxy-250) div 2);
           settextstyle(0,0,5);setcolor(darkgray);
           outtextxy((getmaxx div 2)-93,170+(vy div 2)-25,'Spat');
           outtextxy((getmaxx div 2)-133,170+(vy div 2)+vy-25,'Koniec');
           setcolor(green);
           outtextxy((getmaxx div 2)-90,(170+(vy div 2))-29,'Spat');
           outtextxy((getmaxx div 2)-130,(170+(vy div 2)+vy)-29,'Koniec');
           case sipky(getmaxx div 2,202,100,7,((getmaxy-250) div 2),2,green) of
           1:koniec:=0;
           2:koniec:=1;
           end;
      end;
    end;

  until koniec=1;
end;

begin
  randomize;
  assign(subor,suborc);
  gd:=detect;
  initgraph(gd,gm,'C:\lazarus');

  login(20);
  hra();
  prepis_do_subor();

  closegraph();
  readln();
end.
